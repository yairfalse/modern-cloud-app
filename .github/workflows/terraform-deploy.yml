name: Terraform Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-deploy.yml'
  workflow_dispatch:

env:
  DAGGER_VERSION: v0.18.10

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Dagger CLI
        run: |
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=0.18.10 sh
          sudo mv ./bin/dagger /usr/local/bin
          dagger version
        
      - name: Validate Terraform Configuration
        id: validate
        uses: dagger/dagger-for-github@v6
        with:
          verb: call
          args: -m ci/ terraform-validate --source=.
          version: ${{ env.DAGGER_VERSION }}
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          
      - name: Plan Terraform Changes
        id: plan
        run: |
          output=$(dagger call -m ci/ terraform-plan \
            --source=. \
            --project-id=taskmate-461721 \
            --region=europe-west3 \
            --name-prefix=modernblog \
            --service-account-key="$GCP_SERVICE_ACCOUNT_KEY")
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          
      - name: Apply Terraform Changes
        id: apply
        if: success()
        run: |
          output=$(dagger call -m ci/ terraform-apply \
            --source=. \
            --project-id=taskmate-461721 \
            --region=europe-west3 \
            --name-prefix=modernblog \
            --service-account-key="$GCP_SERVICE_ACCOUNT_KEY" \
            --auto-approve=true)
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          
      - name: Create deployment summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Step | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Validation | ${{ steps.validate.outcome }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Plan | ${{ steps.plan.outcome }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Apply | ${{ steps.apply.outcome }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Terraform deployment failed!"
          echo "Validation: ${{ steps.validate.outcome }}"
          echo "Plan: ${{ steps.plan.outcome }}"
          echo "Apply: ${{ steps.apply.outcome }}"